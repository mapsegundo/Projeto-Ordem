/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projeto.telas;

import br.com.projeto.dao.ClientesDAO;
import br.com.projeto.dao.OrdemServicoDAO;
import br.com.projeto.dao.ServicosDAO;
import br.com.projeto.dao.UsuariosDAO;
import br.com.projeto.modelos.Clientes;
import br.com.projeto.modelos.OrdemServicos;
import br.com.projeto.modelos.Servicos;
import br.com.projeto.modelos.Usuarios;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shall
 */
public class FrmOrdemServico extends javax.swing.JFrame {

    private int recebeId;
    /**
     * Creates new form FrmOrdemServicos
     */
    public FrmOrdemServico() {
        initComponents();
    }

    public void pegarHora() {
        Date minhaHora = new Date();
        SimpleDateFormat formataHora = new SimpleDateFormat("HH:mm:ss");
        txtHora.setText(formataHora.format(minhaHora));
    }

    // Metodo para limpar campos
    public void limparCampos() {
        txtDescricao.setText("");
        txtData.setDate(null);
        pegarHora();
    }

    // Metodo para listar todas as OS
    public List<OrdemServicos> listarOS() {
        try {
            OrdemServicoDAO dao = new OrdemServicoDAO();
            List<OrdemServicos> listaOS = dao.listarTodasOSComInnerJoin();

            //Criando o objeto que vai guardar os registros e a estrutura da tabela
            DefaultTableModel modelo = (DefaultTableModel) tabelaOS.getModel();

            modelo.setNumRows(0);

            //Percorrer os registros que estão na listaOS
            for (OrdemServicos os : listaOS) {
                modelo.addRow(new Object[]{
                    os.getIdOrdem(),
                    os.getFkIdCliente(),
                    os.getFkIdServico(),
                    os.getFkIdUsuario(),
                    os.getDescricaoServico(),
                    os.getDataCadastro(),
                    os.getHoraServico()
                });
            }
        } catch (Exception e) {
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbCliente = new javax.swing.JComboBox<>();
        cbUsuario = new javax.swing.JComboBox<>();
        cbServico = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        txtData = new com.toedter.calendar.JDateChooser();
        txtHora = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cbFiltro = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();
        txtFiltro = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaOS = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Projeto Ordem");
        setPreferredSize(new java.awt.Dimension(739, 604));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Ordem de Serviço");
        jLabel1.setToolTipText("");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da OS"));

        jLabel2.setText("Cliente:");

        jLabel3.setText("Usuário:");

        jLabel4.setText("Serviço:");

        jLabel5.setText("Descrição:");

        cbCliente.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cbClienteAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        cbUsuario.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cbUsuarioAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        cbServico.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cbServicoAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel6.setText("Data:");

        jLabel7.setText("Hora:");

        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane1.setViewportView(txtDescricao);

        txtHora.setEditable(false);
        try {
            txtHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtHora.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbServico, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addComponent(cbUsuario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(cbServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar OS"));

        jLabel8.setText("Filtro:");

        cbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Data", "Serviço", "OS" }));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/projeto/imagens/botaoFiltrar.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFiltro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabelaOS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Cliente", "Serviço", "Usuário", "Descrição", "Data Cadastro", "Hora Serviço"
            }
        ));
        tabelaOS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaOSMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaOS);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/projeto/imagens/botaoSalvar.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/projeto/imagens/botaoAlterar.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/projeto/imagens/botaExcluir.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // Botao para filtrar a busca
        //Criar list de ordem de servico
        try {
            List<OrdemServicos> listaOS = new ArrayList<>();
            OrdemServicoDAO dao = new OrdemServicoDAO();
            Date data = txtData.getDate();
            SimpleDateFormat formataData = new SimpleDateFormat("yyyy-MM-dd");

            //Recebe o texto digitado no filtro
            String termo = "%" + txtFiltro.getText() + "%";

            // Caso o usuário tenha escolhido a Data
            if (cbFiltro.getSelectedIndex() == 0) {
                listaOS = dao.consultarPorData(formataData.format(data));

            } else if (cbFiltro.getSelectedIndex() == 1) {
                listaOS = dao.consultarPorServico(termo);

            } else if (cbFiltro.getSelectedIndex() == 2) {
                String recebeFiltro = txtFiltro.getText().replaceAll(" ", "");
                listaOS = dao.consultarPorId(Integer.parseInt(recebeFiltro));
            }
            DefaultTableModel modelo = (DefaultTableModel) tabelaOS.getModel();

            //Zerar linhas
            modelo.setNumRows(0);

            //Percorrer os registros que estão na listaOS
            for (OrdemServicos os : listaOS) {
                modelo.addRow(new Object[]{
                    os.getIdOrdem(),
                    os.getFkIdCliente(),
                    os.getFkIdServico(),
                    os.getFkIdUsuario(),
                    os.getDescricaoServico(),
                    os.getDataCadastro(),
                    os.getHoraServico()
                });
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Valor de filtro incorreto");
            listarOS();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            OrdemServicos os = new OrdemServicos();
            Clientes cliente = (Clientes) cbCliente.getSelectedItem();
            Usuarios usuario = (Usuarios) cbUsuario.getSelectedItem();
            Servicos servico = (Servicos) cbServico.getSelectedItem();

            //Preenche o objeto OS com os dados capturados da tela
            os.setFkIdCliente(cliente);
            os.setFkIdUsuario(usuario);
            os.setFkIdServico(servico);
            os.setDescricaoServico(txtDescricao.getText());

            //Formatar Data
            Date data = txtData.getDate();
            SimpleDateFormat formata = new SimpleDateFormat("yyyy-MM-dd");
            os.setDataCadastro(formata.format(data));
            os.setHoraServico(txtHora.getText());

            OrdemServicoDAO dao = new OrdemServicoDAO();
            dao.cadastrarOS(os);

            JOptionPane.showMessageDialog(null, "Ordem de serviço salva com sucesso");
            limparCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar OS: " + e);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void cbClienteAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbClienteAncestorAdded
        try {
            cbCliente.removeAllItems();
            ClientesDAO dao = new ClientesDAO();
            List<Clientes> listaClientes = dao.listarTodosClientes();
            
            for (Clientes cliente : listaClientes) {
                cbCliente.addItem(cliente);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_cbClienteAncestorAdded

    private void cbUsuarioAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbUsuarioAncestorAdded
        try {
            cbUsuario.removeAllItems();
            UsuariosDAO dao = new UsuariosDAO();
            List<Usuarios> listaUsuarios = dao.listarTodosUsuarios();
            for (Usuarios usuario : listaUsuarios) {
                cbUsuario.addItem(usuario);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_cbUsuarioAncestorAdded

    private void cbServicoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbServicoAncestorAdded
        try {
            cbServico.removeAllItems();
            ServicosDAO dao = new ServicosDAO();
            List<Servicos> listaServicos = dao.listarTodosServicos();
            for (Servicos servico : listaServicos) {
                cbServico.addItem(servico);
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_cbServicoAncestorAdded

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // Pega a hora do sistema
        pegarHora();

        // Listar todas as OS
        listarOS();
    }//GEN-LAST:event_formWindowActivated

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            int op;
            //tela de operação de escolha
            op = JOptionPane.showConfirmDialog(null, "Você deseja excluir a OS?", "Excluir", 0);

            if (op == 0) {
                OrdemServicoDAO dao = new OrdemServicoDAO();
                dao.excluirOS(recebeId);

                JOptionPane.showMessageDialog(null, "OS excluída com sucesso!");
                listarOS();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir OS: " + e);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tabelaOSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaOSMouseClicked
        // Pegar campos da tabela
        try {
            recebeId = Integer.parseInt(tabelaOS.getValueAt(tabelaOS.getSelectedRow(), 0).toString());
            cbCliente.getModel().setSelectedItem(tabelaOS.getValueAt(tabelaOS.getSelectedRow(), 1).toString());
            cbServico.getModel().setSelectedItem(tabelaOS.getValueAt(tabelaOS.getSelectedRow(), 2).toString());
            cbUsuario.getModel().setSelectedItem(tabelaOS.getValueAt(tabelaOS.getSelectedRow(), 3).toString());
            txtDescricao.setText(tabelaOS.getValueAt(tabelaOS.getSelectedRow(), 4).toString());
            //Converter data
            Calendar cal = Calendar.getInstance();
            SimpleDateFormat formata = new SimpleDateFormat("yyyy-MM-dd");
            cal.setTime(formata.parse(tabelaOS.getValueAt(tabelaOS.getSelectedRow(), 5).toString()));
            txtData.setCalendar(cal);
            txtHora.setText(tabelaOS.getValueAt(tabelaOS.getSelectedRow(), 6).toString());
            //System.out.println(getRecebeId());
        } catch (Exception e) {

        }
    }//GEN-LAST:event_tabelaOSMouseClicked

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // Alterar campos da OS
        try {
            OrdemServicos os = new OrdemServicos();
            os.setIdOrdem(recebeId);
            Clientes cliente = (Clientes) cbCliente.getSelectedItem();
            int idCliente = cliente.getIdCliente();
            Usuarios usuario = (Usuarios) cbUsuario.getSelectedItem();
            int idUsuario = usuario.getIdUsuario();
            Servicos servico = (Servicos) cbServico.getSelectedItem();
            int idServico = servico.getIdServico();

            //Preenche o objeto OS com os dados capturados da tela
            os.setFkIdCliente(cliente);
            os.setFkIdUsuario(usuario);
            os.setFkIdServico(servico);
            os.setDescricaoServico(txtDescricao.getText());

            //Formatar Data
            Date data = txtData.getDate();
            SimpleDateFormat formata = new SimpleDateFormat("yyyy-MM-dd");
            os.setDataCadastro(formata.format(data));
            os.setHoraServico(txtHora.getText());

            OrdemServicoDAO dao = new OrdemServicoDAO();
            dao.alterarOS(os, idCliente, idServico, idUsuario);

            JOptionPane.showMessageDialog(null, "Ordem de serviço alterada com sucesso");
            limparCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao alterar OS: " + e);
        }

    }//GEN-LAST:event_btnAlterarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmOrdemServico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<Object> cbCliente;
    private javax.swing.JComboBox<String> cbFiltro;
    private javax.swing.JComboBox<Object> cbServico;
    private javax.swing.JComboBox<Object> cbUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabelaOS;
    private com.toedter.calendar.JDateChooser txtData;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JFormattedTextField txtHora;
    // End of variables declaration//GEN-END:variables
}
